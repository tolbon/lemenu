<?php

namespace App\Controller\Admin;

use App\Entity\Restaurant;
use Doctrine\ORM\QueryBuilder;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection;
use EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto;
use EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\CurrencyField;
use EasyCorp\Bundle\EasyAdminBundle\Field\FormField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\SlugField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TelephoneField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\UrlField;
use EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator;

class RestaurantCrudController extends AbstractCrudController
{

    /**
     * @var AdminUrlGenerator
     */
    private $adminUrlGenerator;

    public function __construct(AdminUrlGenerator $adminUrlGenerator)
    {
        $this->adminUrlGenerator = $adminUrlGenerator;
    }

    public static function getEntityFqcn(): string
    {
        return Restaurant::class;
    }

    public function createIndexQueryBuilder(SearchDto $searchDto, EntityDto $entityDto, FieldCollection $fields, FilterCollection $filters): QueryBuilder
    {
        $qb = parent::createIndexQueryBuilder($searchDto, $entityDto, $fields, $filters);
/*
        $u = $this->getUser();
        $qb->innerJoin('entity.manager', 'userId');
        $qb->andWhere('userId = :userId')->setParameter('userId', $u->getId());
*/
        return $qb;
    }

    public function configureFields(string $pageName): iterable
    {
        $name = TextField::new('name');
        $description = TextEditorField::new('description');
        $currency = CurrencyField::new('currency');
        $urlSlug = SlugField::new("urlSlug")->setTargetFieldName('name');
        $menus = AssociationField::new('menus')->autocomplete();
        $phone = TelephoneField::new('phone');

        return [
            //IdField::new('id'),
            $name,
            $description,
            $currency,
            $urlSlug,
            $menus,
            $phone,
        ];
    }

    public function configureActions(Actions $actions): Actions
    {
        // this action executes the 'renderInvoice()' method of the current CRUD controller
        $viewInvoice = Action::new('viewMenus', 'Voir les menus', 'fa fa-file-invoice')
            ->linkToUrl(function (Restaurant $restaurant) {
                return $this->adminUrlGenerator->setController(MenuCrudController::class)
                    ->setAction(Action::INDEX)->set('filters', ['restaurant' => [ 'comparison' => '=', 'value' => $restaurant->getId()]])->generateUrl();
            });

        $actions->add(Action::INDEX, $viewInvoice);
        return parent::configureActions($actions); // TODO: Change the autogenerated stub
    }
}
